<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.14.2.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>get_integer_async</title>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for get_integer_async"/>
  <meta name="rh-index-keywords" content="get_integer_async"/>
  <meta name="search-keywords" content="get_integer_async"/>
  <meta name="is_pure" content="true"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asynchronous_Functions/Dialog/show_message_async.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asynchronous_Functions/Dialog/get_string_async.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="get_integer_async">
        <span>get_integer_async</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>get_integer_async</h1>
  <p>This function opens a window and displays message as well as a space for the user to input a value (which will contain the supplied default value to start with). This is an asynchronous function, and as such <span data-keyref="GameMaker Name">GameMaker</span> does <i>not</i> block the device it is being run on while waiting for an answer, but rather keeps on running events as normal. Once the user has typed out their string and pressed the &quot;Okay&quot; button, an asynchronous <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm"><b>Dialog</b></a> event is triggered which, for the duration of that event <i>only</i>, will have a DS map stored in the variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>.</p>
  <p>This map will contain the three keys, &quot;<span class="inline">id</span>&quot;, &quot;<span class="inline">status</span>&quot;, and &quot;<span class="inline">value</span>&quot;. &quot;<span class="inline">id</span>&quot; is the value that was returned by the function when called, the &quot;status&quot; will be either <span class="inline">true</span> for the &quot;Okay&quot; button being pressed, or <span class="inline">false</span> if the message was canceled (where applicable as not all target platforms permit messages to be canceled). Finally &quot;<span class="inline">value</span>&quot; will return the integer that the user input as a string (an empty string &quot;&quot; will be returned if no input was given).</p>
  <div data-conref="../../../../assets/snippets/Note_Dialog_For_Debug_Only.hts">
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span> This function is <span data-keyref="Dialog for debug only">for <strong>debugging and testing use only</strong> and should not be used in released games. For that purpose you should create a custom user interface to receive input from players so that you have complete control over how the dialogs look and behave.</span></p>

</div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">get_integer_async(string, default);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>string</td>
        <td><span data-keyref="Type_String"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">String</a></span></td>
        <td>The message to show in the dialog.</td>
      </tr>
      <tr>
        <td>default</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The default value.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event"><a target="_blank" href="../Asynchronous_Functions.htm">Async Request ID</a></span></p>
  <p> </p>
  <h4>Extended Example:</h4>
  <p>The <b>left mouse press event</b> (for example) of the object that is showing the message would have the following code:</p>
  <p class="code">msg = get_integer_async(&quot;How old are you?&quot;, 0);</p>
  <p>The above will show a message requesting that the user input a string and press &quot;Okay&quot;. The function id is stored in the variable &quot;msg&quot; and will be used in the asynchronous Dialogs event as shown below:</p>
  <p class="code">var i_d = ds_map_find_value(async_load, &quot;id&quot;);<br/>
    if (i_d == msg) <br/>
    {<br/>
        if (ds_map_find_value(async_load, &quot;status&quot;)) <br/>
        {<br/>
            global.Age = ds_map_find_value(async_load, &quot;value&quot;);<br/>
        }<br/>
    }</p>
  <p>The above code checks the &quot;<span class="inline">id</span>&quot; key of the returned <span class="inline">DS Map</span> against the value stored in the variable &quot;msg&quot;. If they are the same, it then checks to see if &quot;Okay&quot; was pressed (rather than the window being closed/cancelled) and if it returns <span class="inline">true</span> it then sets a global variable from the integer returned.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Dialog.htm">Dialog</a></div>
        <div style="float:right">Next: <a href="show_message_async.htm">show_message_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
get_integer_async
-->
  <!-- TAGS
get_integer_async
-->

</body></html>