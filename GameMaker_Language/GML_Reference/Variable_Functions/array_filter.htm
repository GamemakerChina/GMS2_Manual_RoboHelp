<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.2.0_32";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>array_filter</title>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"/>
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content=""/>
  <meta name="topic-comment" content=""/>
  <meta name="rh-index-keywords" content="array_filter"/>
  <meta name="search-keywords" content="array_filter"/>
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/array_map.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/array_intersection.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="array_filter">
        <span>array_filter</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <h1><span data-field="title" data-format="default">array_filter</span></h1>
  <p><span>This function returns a <strong>new</strong> array that is the <i>filtered</i> version of the given array (or a range of it).</span></p>
  <p><span>You supply a <a href="Array_Functions.htm#h">Predicate Method</a> which runs for all elements in the array. It should return either <span class="inline2">true</span> or <span class="inline2">false</span> based on a condition.</span></p>
  <p><span>Elements for which the predicate function returns <span class="inline2">true</span> are included in the returned array, and ones that get</span> <span class="inline2">false</span> are ignored.</p>
  <p>By default the function checks the whole array. You can optionally supply <a href="Array_Functions.htm#h1">Offset And Length</a> arguments to check a part of the array, traversing the array forward or backward.</p>
  <div data-conref="../../../assets/snippets/Syntax_predicate_general.hts">
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true" data-skip-index="true">Predicate Function</span><span data-close-text="true">Predicate Function</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p>This function takes a <a href="Array_Functions.htm#h">Predicate Method</a> that operates on the given array. The predicate function is passed the following arguments:</p>
    <h4>Syntax:</h4>
    <p class="code">function(element, index);</p>
    <table class=" cke_show_border">
      <tbody>
        <tr>
          <th>Argument</th>
          <th>Type</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>element</td>
          <td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td>
          <td>The current array element&#39;s value</td>
        </tr>
        <tr>
          <td>index</td>
          <td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td>
          <td>The current array index</td>
        </tr>
      </tbody>
    </table>
    <p>The predicate function should return a <span data-keyref="Type_Bool"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Boolean</a></span><span style="text-align: justify;">, which affects how the original function modifies or reads the array</span><span style="text-align: justify;">.</span></p>
    <p>See information and examples on <a href="Array_Functions.htm#h">Predicate Method</a>.</p>
  </div>

</div>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span> See <span class="inline2"><a href="array_copy_while.htm">array_copy_while</a></span> which is similar, but stops execution after the first <span class="inline2">false</span> return of the predicate function.</p>
  <div data-conref="../../../assets/snippets/Syntax_signature_element_index_returns_bool.hts">
  <div data-conref="../../../assets/snippets/Syntax_signature_element_index.hts">
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">array_filter</span>(array, function, [offset], [length]);</p>
  <table>
    <colgroup>
      <col/>
      <col/>
      <col/>
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>array</td>
        <td><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></td>
        <td>The array to use</td>
      </tr>
      <tr>
        <td>function</td>
        <td><span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td>
        <td>The <a href="Array_Functions.htm#h">Predicate Method</a> to run on each element</td>
      </tr>
      <tr>
        <td>offset</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span> The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be <span class="inline2">array_length(array) + offset</span>. See: <a href="Array_Functions.htm#h1">Offset And Length</a></td>
      </tr>
      <tr>
        <td>length</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span> The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See: <a href="Array_Functions.htm#h1">Offset And Length</a></td>
      </tr>
    </tbody>
  </table>

</div>

</div>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">function passed_the_test(element, index)<br/>
    {<br/>
        return element &gt;= 50;<br/>
    }<br/>
    <br/>
    scores = [0, 15, 4, 78, 96, 65, 49];<br/>
    passed = <span data-field="title" data-format="default">array_filter</span>(scores, passed_the_test);
  </p>
  <p>The above code first defines a function <span class="inline2">passed_the_test</span> that takes in <span class="inline2">element</span> and <span class="inline2">index</span> parameters, which is usual for array predicate functions.</p>
  <p>The function returns <span class="inline2">true</span> if the value of <span class="inline2">element</span> is greater than or equal to 50, otherwise it returns <span class="inline2">false</span>.</p>
  <p>It then creates an array <span class="inline2">scores</span> with various values between 0 and 100. Finally it calls <span class="inline2">array_filter</span> on this array and stores the new array in a variable <span class="inline2">passed</span>.</p>
  <p>The <span class="inline2">passed</span> array would only contain values from the <span class="inline2">scores</span> array that were greater than or equal to 50, satisfying the condition set in the predicate function.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a href="Array_Functions.htm">Array Functions</a></div>
        <div>Next: <a href="array_map.htm">array_map</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
array_filter
-->
  <!-- TAGS
array_filter
-->

</body></html>