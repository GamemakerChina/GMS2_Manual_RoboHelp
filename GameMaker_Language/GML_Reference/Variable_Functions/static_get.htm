<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.1.0_22";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>static_get</title>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"/>
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo"/>
  <meta name="topic-comment" content="Reference page for the function static_get"/>
  <meta name="rh-index-keywords" content="static_get"/>
  <meta name="search-keywords" content="static_get"/>
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/static_set.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/is_instanceof.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="static_get">
        <span>static_get</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <h1><span data-field="title" data-format="default">static_get</span></h1>
  <p>This function returns the <a href="../../GML_Overview/Structs/Static_Structs.htm">Static Struct</a> for the given function or struct.</p>
  <p>When you supply a function or method, this function returns the static struct for that function or method.</p>
  <p>You can also supply a struct. What&#39;s returned depends on the struct: </p>
  <ul class="colour">
    <li>For a struct created from a constructor using the <span class="inline2"><a href="../../GML_Overview/Language_Features/new.htm">new</a></span> keyword: the static struct for the constructor that was used to create the struct (or a different struct if it was changed after creation using <span class="inline3_func"><a href="static_set.htm">static_set</a></span>).</li>
    <li>For a static struct: the parent static struct in the <a href="../../GML_Overview/Structs/Static_Structs.htm#h">Static Chain</a>. When using constructor inheritance, static structs are chained, i.e. you can get the static struct of a static struct, if the constructor has a parent constructor.</li>
    <li>For any other struct: this struct&#39;s &quot;parent&quot; struct, which links the struct to the &quot;root&quot; struct.</li>
    <li>For the &quot;root&quot; struct: <span class="inline2">undefined</span></li>
  </ul>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span> You can pass the result of <span class="inline3_func"><a href="method_get_index.htm">method_get_index</a></span> to get the static struct of a method&#39;s function.</p>
  <p>See: <a href="../../GML_Overview/Structs/Static_Structs.htm">Static Struct</a></p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">static_get</span>(struct_or_func_name);</p>
  <table>
    <colgroup>
      <col/>
      <col/>
      <col/>
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>struct_or_func_name</td>
        <td><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span>, <span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span> or <span data-keyref="Type_Method"><a target="_blank" href="../../GML_Overview/Method_Variables.htm">Method</a></span></td>
        <td>The struct, function or method for which to get the static struct</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span> or <span data-keyref="Type_Undefined"><a target="_blank" href="../../GML_Overview/Data_Types.htm">undefined</a></span> (for the root struct)</p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">function counter()<br/>
    {<br/>
        static count = 0;<br/>
        return count ++;<br/>
    }<br/>
    <br/>
    repeat (10) counter()<br/>
    <br/>
    // Get static struct of counter()<br/>
    var _static_counter = static_get(counter);<br/>
    <br/>
    // Both of these read the same variable<br/>
    show_debug_message(counter.count); // 10<br/>
    show_debug_message(_static_counter.count); // 10
  </p>
  <p>The above code creates a function <span class="inline2">counter()</span> with a static variable. The function is called repeatedly so its static variable&#39;s value is increased.</p>
  <p>The static struct for that function is then returned, and stored in a variable (<span class="inline2">_static_counter</span>). Then it prints the static variable from the function, by first reading it from the function directly (<span class="inline2">counter.count</span>) and then reading it from the static struct (<span class="inline2">_static_counter.count</span>). Both print the same value, as they refer to the exact same variable.</p>
  <p> </p>
  <h4>Example 2: Going Up in the Static Chain</h4>
  <p class="code">function item() constructor<br/>
    {<br/>
        static hello = function()<br/>
        {<br/>
            show_debug_message(&quot;Hello World!&quot;);<br/>
        }<br/>
    }<br/>
    function potion() : item() constructor {}<br/>
    <br/>
    my_potion = new potion();<br/>
    var _static_potion = <span data-field="title" data-format="default">static_get</span>(my_potion);<br/>
    var _static_parent = <span data-field="title" data-format="default">static_get</span>(_static_potion);<br/>
    _static_parent.hello();
  </p>
  <p>The above code first creates two constructors: a parent constructor <span class="inline2">item</span> with a single static function <span class="inline3_func">hello</span> and a child constructor <span class="inline2">potion</span>. It then creates a new <span class="inline2">potion</span> and stores it in a variable <span class="inline2">my_potion</span>. Next, a call to <span class="inline3_func"><span data-field="title" data-format="default">static_get</span></span> is made to get the static struct of <span class="inline2">my_potion</span>. The returned static struct, stored in a temporary variable <span class="inline2">_static_potion</span>, is part of the static chain. From this point, all further calls to <span class="inline3_func"><span data-field="title" data-format="default">static_get</span></span> will move up in the static chain. Another call to <span class="inline3_func"><span data-field="title" data-format="default">static_get</span></span> is made, which returns the static of <span class="inline2">item</span> and stores it in another temporary variable <span class="inline2">_static_parent</span>. Finally, this struct&#39;s <span class="inline3_func">hello</span> method is called.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a href="Variable_Functions.htm">Variable Functions</a></div>
        <div>Next: <a href="static_set.htm">static_set</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
static_get
-->
  <!-- TAGS
static_get
-->

</body></html>