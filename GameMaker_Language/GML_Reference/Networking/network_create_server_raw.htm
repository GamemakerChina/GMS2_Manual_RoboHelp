<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "9.2.2.15.0_2";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>network_create_server_raw</title>
  <meta name="generator" content="Adobe RoboHelp 2020"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for network_create_server_raw"/>
  <meta name="rh-index-keywords" content="network_create_server_raw,network_socket_tcp,network_socket_udp,network_socket_ws"/>
  <meta name="search-keywords" content="network_create_server_raw,network_socket_tcp,network_socket_udp,network_socket_ws"/>
  <meta name="is_pure" content="true"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Networking/network_create_socket.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Networking/network_create_server.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="network_create_server_raw">
        <span>network_create_server_raw</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>network_create_server_raw</h1>
  <p>This function is used to create a new network server for your game, using one of the permitted connection protocols (see the constants listed below). You supply the server type, then give it a port to use, and finally the number of maximum connections that should be permitted at any one time to the server (note that this number is up to you, but too many connected clients will saturate the network or the device CPU won&#39;t be able to handle the processing of that number of players, so use with care). The function returns a unique <i>id</i> which should be used stored in a variable and used to identify the server in all further network functions, or a value of less than 0 if the connection fails.</p>
  <div data-conref="../../../assets/snippets/network_socket_types.hts">
  <table style="">
    <colgroup>
      <col/>
      <col/>
    </colgroup>
    <tbody>
      <tr style="">
        <th colspan="2" style=""><span data-keyref="Type_Constant_Network_Socket_Type"><a target="_blank" href="../../../../GameMaker_Language/GML_Reference/Networking/network_create_socket.htm">Socket Type Constant</a></span></th>
      </tr>
      <tr style="">
        <th style="">Constant</th>
        <th style="">Description</th>
      </tr>
      <tr style="">
        <td style=""><span class="inline">network_socket_tcp</span></td>
        <td style="">Create a socket using TCP.</td>
      </tr>
      <tr style="">
        <td style=""><span class="inline">network_socket_udp</span></td>
        <td style="">Create a socket using UDP.</td>
      </tr>
      <tr style="">
        <td style=""><span class="inline">network_socket_ws</span></td>
        <td style="">Create a WebSocket using TCP. (<em><strong>NOTE</strong>: Use <a href="network_connect_raw_async.htm">Async</a> functions for connecting through WebSockets</em>)</td>
      </tr>
      <tr style="">
        <td style=""><span class="inline">network_socket_wss</span> *</td>
        <td style="">Create a secure WebSocket using TCP.</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><span class="note">NOTE 1</span> It is also possible to secure your simple WebSocket (<span class="inline">network_socket_ws</span>) by using the <span class="inline2">wss://</span> protocol in your URLs.</p>
  <p class="note"><span class="note">NOTE 2</span> * Secure WebSockets will not work on UWP and Xbox One when using the legacy XDK platform, however they will work on those targets when using GDK.</p>

</div>
  <p>As this creates a &quot;raw&quot; server, it will not accept nor use any of the built in GameMaker data headers for communication, and so you should be using the functions <a href="network_send_raw.htm"><span class="inline">network_send_raw()</span></a> and <a href="network_send_udp_raw.htm"><span class="inline">network_send_udp_raw()</span></a> to send unformatted data to the server created.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">network_create_server_raw(type, port, max_client);</p>
  <table style="">
    <tbody>
      <tr style="">
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr style="">
        <td>type</td><td><span data-keyref="Type_Constant_Network_Socket_Type"><a target="_blank" href="../../../../GameMaker_Language/GML_Reference/Networking/network_create_socket.htm">Socket Type Constant</a></span></td>
        <td>The type of server to create (see the constants listed below).</td>
     </tr>
      <tr style="">
        <td>port</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The port that the server will use.</td>
     </tr>
      <tr style="">
        <td>max_client</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The maximum number of clients that can connect at once.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="../../../../GameMaker_Language/GML_Reference/Networking/network_create_socket.htm">Network Socket ID</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var port = 6510;<br/>
    server = network_create_server_raw(network_socket_tcp, port, 32);<br/>
    while (server &lt; 0 &amp;&amp; port &lt; 65535)<br/>
    {<br/>
        port++<br/>
        server = network_create_server(network_socket_tcp, port, 32);<br/>
    }</p>
  <p>The above code will try and create a server using TCP through port 6510. If that port is unavailable, it will then loop through the ports to find one that is.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Networking.htm">Networking</a></div>
        <div style="float:right">Next: <a href="network_create_socket.htm">network_create_socket</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
network_create_server_raw
network_socket_tcp
network_socket_udp
network_socket_ws
-->
  <!-- TAGS
network_create_server_raw
-->

</body></html>