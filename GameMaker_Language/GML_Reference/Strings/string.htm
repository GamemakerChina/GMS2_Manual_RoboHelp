<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.10.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>string</title>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for string"/>
  <meta name="rh-index-keywords" content="string"/>
  <meta name="search-keywords" content="string"/>
  <meta name="is_pure" content="true"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Strings/string_ext.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Strings/Strings.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="string">
        <span>string</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">string</span></h1>
  <p>This function creates a new string from a variety of data types.</p>
  <p>When only one argument is provided to the function, this argument is considered to be a value, which will be converted to a string from its original <a href="../../GML_Overview/Data_Types.htm">data type</a>. When more than one argument is given, the first argument is considered a <a href="string.htm#h">Format String</a> and the arguments that follow it are considered the values to insert into the format string.</p>
  <h2 id="h1">Conversion From Non-String Types</h2>
  <div data-conref="../../../assets/snippets/String_conversion_rules.hts">
  <p>Values of type <span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span> that are an integer will have no decimal places in the string. Values of type <span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span> that have a fractional part will have two decimal places in the string. If you need more decimal places in the output string you can use the function <span class="inline2"><a href="string_format.htm">string_format</a></span>.</p>
  <p>Values of type <a href="../../GML_Overview/Structs.htm">Struct</a> or <a href="../Asset_Management/Instances/Instances.htm">Instance</a> will be converted to a string using that struct&#39;s or instance&#39;s <a href="Strings.htm#tostring_method">toString() Method</a> if one exists, or converted to a string implicitly.</p>
  <p>Values of type <span data-keyref="Type_Handle"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Handle</a></span> will be converted to a string that shows the handle info: <span data-conref="../../../assets/snippets/Handle_Format.hts"><span class="inline2">&quot;ref &lt;type&gt; &lt;id&gt;&quot;</span></span>.</p>
  <p>Values of type <a href="../../GML_Overview/Arrays.htm">Array</a> will be converted to a string of the format <span class="inline2">[element1, element2, element3, element4, element5]</span>, i.e. the concatenation of all elements in the array. If any of the elements in the array is a struct or an instance then its <a href="Strings.htm#h3"> </a> will be called to convert it to a string.</p>

</div>
  <h2 id="h">Format String</h2>
  <p>When you pass more than one argument to the <span class="inline2"><span data-field="title" data-format="default">string</span></span> function, the first argument will be treated as a <em>format string</em>. In a format string you can use <i>placeholders</i> of the form &quot;{0}&quot;, &quot;{1}&quot;, &quot;{2}&quot;, etc.</p>
  <p>These placeholders will be replaced with the arguments at the positions they refer to, i.e. &quot;{0}&quot; will be replaced with the second argument, &quot;{1}&quot; will be replaced with the third argument, &quot;{2}&quot; will be replaced with the fourth argument, and so on.</p>
  <p class="code">string_variable = string(&quot;This is a string with two placeholders that will be replaced. They are {0} and {1}.&quot;, &quot;this&quot;, &quot;that&quot;);<br/>
    <br/>
    // Results in:<br/>
    // &quot;This is a string with two placeholders that will be replaced. They are this and that.&quot;
  </p>
  <p>If you only pass a single argument to the function, then this argument will not be considered a format string. If you add placeholders of the kind &quot;{0}&quot; in this case, then they will be output as normal text as there are no values to replace them with: </p>
  <p class="code">string_variable = string(&quot;This is a string with two placeholders that won&#39;t be replaced. They are {0} and {1}.&quot;);<br/>
    <br/>
    // Results in:<br/>
    // &quot;This is a string with two placeholders that won&#39;t be replaced. They are {0} and {1}.&quot;
  </p>
  <div data-conref="../../../assets/snippets/Note_See_Template_Strings.hts">
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span> You can also use <a href="Strings.htm#h4">Template Strings</a> to insert variables and expressions into strings.</p>

</div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">string</span>(value_or_format [, value1, value2, ...]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>value_or_format</td>
        <td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span> (if value) or <span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span> (if format)</td>
        <td>The value to be turned into a string.</td>
      </tr>
      <tr>
        <td>[, value1, value2, ...]</td>
        <td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td>
        <td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span> The values to be inserted at the placeholder positions.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">draw_text(100, 100, &quot;Score: &quot; + string(score) + &quot; / Health: &quot; + <span data-field="title" data-format="default">string</span>(health));</p>
  <p>The above code uses the <span class="inline2"><span data-field="title" data-format="default">string</span></span> function to draw both real numbers and strings together, as <a href="../Drawing/Text/draw_text.htm"><span class="inline2">draw_text()</span></a> will only accept <i>either</i> a string <i>or</i> a real, but not both, so we convert the non-strings into strings.</p>
  <p> </p>
  <h4>Example 2:</h4>
  <p class="code">draw_text(100, 100, <span data-field="title" data-format="default">string</span>(&quot;Score: {0} / Health: {1}&quot;, score, health));</p>
  <p>In this code the <span class="inline2"><span data-field="title" data-format="default">string</span></span> function is used in a slightly different way to achieve the same result as in Example 1. Here the function is called with a format string as the first argument, in which &quot;{0}&quot; is replaced with the value of <span class="inline2"><a href="../../GML_Overview/Variables/Builtin_Global_Variables/score.htm">score</a></span> and &quot;{1}&quot; is replaced with the value of <span class="inline2"><a href="../../GML_Overview/Variables/Builtin_Global_Variables/health.htm">health</a></span>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Strings.htm">Strings</a></div>
        <div style="float:right">Next: <a href="string_ext.htm">string_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
string
-->
  <!-- TAGS
string
-->

</body></html>