<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.18.0_7";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>buffer_write</title>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for buffer_write"/>
  <meta name="rh-index-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text"/>
  <meta name="search-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Buffers/buffer_fill.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Buffers/buffer_read.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="buffer_write">
        <span>buffer_write</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">buffer_write</span></h1>
  <p>This function can be used to write data to a previously created buffer. The data you write must be in agreement with the &quot;type&quot; argument of this function, meaning that you can&#39;t try to write a string as an unsigned 16bit integer, for example.</p>
  <p>The function will write your given value at the buffer&#39;s current <a href="buffer_seek.htm">seek position</a>.</p>
  <p>The following constants can be used to define the data type:</p>
  <div data-conref="../../../assets/snippets/buffer_data_type_constants.hts">
  <table style="caption-side: top">
    <caption><span data-keyref="Type_Constant_Buffer_Data_Type"><a target="_blank" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm">Buffer Data Type Constant</a></span></caption>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">buffer_u8</span></td>
        <td>An unsigned, 8bit integer. This is a positive value from 0 to 255.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_s8</span></td>
        <td>A signed, 8bit integer. This can be a positive or negative value from -128 to 127 (0 is classed as positive).</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_u16</span></td>
        <td>An unsigned, 16bit integer. This is a positive value from 0 - 65,535.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_s16</span></td>
        <td>A signed, 16bit integer. This can be a positive or negative value from -32,768 to 32,767 (0 is classed as positive).</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_u32</span></td>
        <td>An unsigned, 32bit integer. This is a positive value from 0 to 4,294,967,295.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_s32</span></td>
        <td>A signed, 32bit integer. This can be a positive or negative value from -2,147,483,648 to 2,147,483,647 (0 is classed as positive).</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_u64</span></td>
        <td>An unsigned 64bit integer. This is a positive value from 0 to 18,446,744,073,709,551,615.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_f16</span></td>
        <td>A 16bit float. This can be a positive or negative value within the range of +/- 65504.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_f32</span></td>
        <td>A 32bit float. This can be a positive or negative value within the range of +/-16777216.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_f64</span></td>
        <td>A 64bit float.</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_bool</span></td>
        <td>A boolean value, can only be either 1 or 0 (<span class="inline">true</span> or <span class="inline">false</span>). It is stored in a single byte (8bit)</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_string</span></td>
        <td>A string of any size, including a final null terminating character</td>
      </tr>
      <tr>
        <td><span class="inline">buffer_text</span></td>
        <td>A string of any size, without the final null terminating character</td>
      </tr>
    </tbody>
  </table>

</div>
  <p>The function will return 0 if it succeeds or -1 if it fails.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_write</span>(buffer, type, value);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">Buffer ID</a></span></td>
        <td>The index of the buffer to write to.</td>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The type of data that is to be written to the buffer (see the list of constants above).</td>
      </tr>
      <tr>
        <td>value</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The data to write.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span> (0 if success, or -1 if it fails)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br/>
    <span data-field="title" data-format="default">buffer_write</span>(buff, buffer_s16, 0);<br/>
    <span data-field="title" data-format="default">buffer_write</span>(buff, buffer_s16, x);<br/>
    <span data-field="title" data-format="default">buffer_write</span>(buff, buffer_s16, y);
  </p>
  <p>The above code finds the start of the buffer with the id stored in the variable &quot;buff&quot; them writes a series of signed 16bit integer values to it.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Buffers.htm">Buffers</a></div>
        <div style="float:right">Next: <a href="buffer_fill.htm">buffer_fill</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_write
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_write
-->

</body></html>