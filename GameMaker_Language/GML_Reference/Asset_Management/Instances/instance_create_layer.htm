<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.3.13.2_1";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>instance_create_layer</title>
  <meta name="generator" content="Adobe RoboHelp 2022"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the function instance_create_layer"/>
  <meta name="rh-index-keywords" content="instance_create_layer"/>
  <meta name="search-keywords" content="instance_create_layer"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_create_depth.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Instances/Deactivating_Instances/instance_deactivate_layer.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="instance_create_layer">
        <span>instance_create_layer</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">instance_create_layer</span></h1>
  <p>With this function you can create a new instance of the specified object at any given point within the room and on the layer specified. The layer can be identified using the layer ID value (as returned by the function <span class="inline3_func"><a href="../Rooms/General_Layer_Functions/layer_create.htm">layer_create</a></span>) or by the name of the layer (as a string, for example &quot;instance_layer&quot;) as defined in <a href="../../../../The_Asset_Editors/Rooms.htm">The Room Editor</a>.</p>
  <p>This function returns the <a href="Instance_Variables/id.htm"><span class="inline">id</span></a> of the new instance which can then be stored in a variable and used to access that instance. Note that this function will also call the <a href="../../../../The_Asset_Editors/Object_Properties/Object_Events.htm">Create Event</a> of the instance being created <i>before</i> continuing with the code or actions for the event that called the function.</p>
  <div data-conref="../../../../assets/snippets/Note_layer_depth_range.hts">
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span> There is a minimum and maximum layer depth of <span data-keyref="Const_Depth_Min">-16000</span> to <span data-keyref="Const_Depth_Max">16000</span>. Anything placed on a layer outside that range will not be drawn although all events will still run as normal for anything on the layer.</p>

</div>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span> This function behaves differently when you call it after calling a room-changing function in the same event. See the note on <span class="inline3_func"><a href="../Rooms/room_goto.htm">room_goto</a></span> for details.</p>
  <h2>Optional Struct</h2>
  <p>The last argument, <span class="inline2">var_struct</span>, is optional and takes a struct containing additional variables for the new instance.</p>
  <p>Variables from this struct are applied to the new instance <em>before</em> its Create event runs, but <em>after</em> its <a href="../../../../The_Asset_Editors/Object_Properties/Object_Variables.htm">Variable Definitions</a> are set.</p>
  <p>This means that the values from that struct are readable in the Create event of the new instance. See <strong>Example 2</strong> at the bottom.</p>
  <p>Values applied to the new instance through this struct can be of any type, including <a href="../../../GML_Overview/Method_Variables.htm">method</a> variables. <a href="Instance_Variables/Instance_Variables.htm">Built-in variables</a> can be changed as well.</p>
  <p class="note"><span class="note">NOTE</span> Variables from the struct are &quot;shallow-copied&quot; to the new instance, meaning any arrays, structs, and other resources are copied by reference and not duplicated.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">instance_create_layer(x, y, layer_id, obj, [var_struct]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The x position the object will be created at</td>
      </tr>
      <tr>
        <td>y</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>The y position the object will be created at</td>
      </tr>
      <tr>
        <td>layer_id</td>
        <td><span data-keyref="Type_ID_Layer"><a target="_blank" href="../Rooms/General_Layer_Functions/layer_get_id.htm">Layer</a></span> or <span data-keyref="Type_String"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">String</a></span></td>
        <td>The layer ID (or name) to assign the created instance to</td>
      </tr>
      <tr>
        <td>obj</td>
        <td><span data-keyref="Type_Asset_Object"><a target="_blank" href="../../../../The_Asset_Editors/Objects.htm">Object Asset</a></span></td>
        <td>The object index of the object to create an instance of</td>
      </tr>
      <tr>
        <td>var_struct</td>
        <td><span data-keyref="Type_Struct"><a target="_blank" href="../../../GML_Overview/Structs.htm">Struct</a></span></td>
        <td><span class="optional">OPTIONAL</span> A struct with variables to assign to the new instance</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Instance"><a target="_blank" href="Instance_Variables/id.htm">Object Instance</a></span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">var inst = instance_create_layer(x, y, &quot;Instances&quot;, obj_bullet);<br/>
    with (inst)<br/>
    {<br/>
        speed = other.shoot_speed;<br/>
        direction = other.image_angle;<br/>
    }</p>
  <p>The above code creates a new instance of the object <span class="inline2">obj_bullet</span> in the &quot;Instances&quot; layer, and stores the instance ID in a variable. This variable is then used to assign <span class="inline">speed</span> and <span class="inline">direction</span> to the new instance.</p>
  <p>This will first create the instance, run its Create event, and <em>then</em> assign values to its variables.</p>
  <p>If you want to assign some variables <em>before</em> the Create event runs, see the example below.</p>
  <p> </p>
  <h4>Example 2:</h4>
  <p class="code">var inst = instance_create_layer(x, y, &quot;Instances&quot;, obj_bullet,<br/>
    {<br/>
        speed : shoot_speed,<br/>
        direction : image_angle<br/>
    });</p>
  <p>The above code creates an instance of <span class="inline2">obj_bullet</span>, and passes in a struct as the last argument.</p>
  <p>That struct has variables for the speed and direction. It pulls its values from the calling instance, without the need to use <span class="inline2">other</span>.</p>
  <p>These variables are applied to the new instance before its Create event runs.</p>
  <p>You&#39;re not limited to a struct literal, as you can also pass in a variable that stores an existing struct, or create a <a href="../../../GML_Overview/Language_Features/new.htm">new</a> struct from a <a href="../../../GML_Overview/Structs.htm#constr">constructor</a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Instances.htm">Instances</a></div>
        <div style="float:right">Next: <a href="instance_create_depth.htm">instance_create_depth</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_create_layer
-->
  <!-- TAGS
instance_create_layer
-->

</body></html>