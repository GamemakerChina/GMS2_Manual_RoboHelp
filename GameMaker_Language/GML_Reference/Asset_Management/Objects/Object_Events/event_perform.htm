<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../..";
    gCommonRootRelPath = "../../../../..";
    gTopicId = "9.2.2.3.12.1.0_2";
  
//]]></script>

  <script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>event_perform</title>
  <meta name="generator" content="Adobe RoboHelp 2020"/>
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"/>
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the function event_perform"/>
  <meta name="rh-index-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end"/>
  <meta name="search-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end"/>
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform_async.htm"/><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="event_perform">
        <span>event_perform</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>event_perform</h1>
  <p>This function will perform the specified event, with the designated argument, for the instance running the code. There are many options here which allow complete simulation of all possible events, but note that this literally just performs all the code in the event and the game will not modify anything to make it trigger itself manually, for example if you choose to perform a keyboard press event, the event will be triggered but relevant key will not be recognised as having been pressed. Or if you perform an alarm event, the alarm counter will not be set to -1 but rather continue to count down.</p>
  <p>Asynchronous events can be called using <a href="event_perform_async.htm"><span class="inline">event_perform_async()</span></a>.</p>
  <p>The table below outlines all the constants that are included in <span data-keyref="GameMaker Name">GameMaker</span> for referencing event types, as well as their number value. The events themselves are marked in <b>bold text</b> and are the same as the return values of the <a href="event_type.htm"><span class="inline">event_type</span></a> variable (to be passed into the first argument of this function), while their number values are marked with <i>italic text</i> and are the same as the return values for the <a href="event_number.htm"><span class="inline">event_number</span></a> variable (to be passed into the second argument of this function):</p>
  <table style="">
    <colgroup>
      <col/>
      <col/>
    </colgroup>
    <tbody>
      <tr style="">
        <th colspan="2" style="width:40%;"><span data-keyref="Type_Constant_Event_Type"><a target="_blank" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">Event Type Constant</a></span> &amp; <span data-keyref="Type_Constant_Event_Number"><a target="_blank" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">Event Number Constant</a></span></th>
      </tr>
      <tr style="">
        <th style="width:40%;">Constant</th>
        <th style="">Description</th>
      </tr>
      <tr style="">
        <td style=""><b>ev_create</b></td>
        <td style="">Create event</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_destroy</b></td>
        <td style="">Destroy event</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_cleanup</b></td>
        <td style="">Clean Up Event</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_step</b></td>
        <td style="">Step event</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_step_normal</i></td>
        <td style="">Step</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_step_begin</i></td>
        <td style="">Begin Step</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_step_end</i></td>
        <td style="">End Step</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_alarm</b></td>
        <td style="">Alarm event</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- 0 ... 11</i></td>
        <td style="">The number relevant to which of the 12 alarms you wish to trigger the event of</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_keyboard, ev_keypress, ev_keyrelease</b></td>
        <td style="">Keyboard/Keyboard Pressed/Keyboard Released</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- any key code</i></td>
        <td style="">vk_space or ord(&quot;W&quot;) for example.</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_mouse</b></td>
        <td style="">Mouse event</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_left_button</i></td>
        <td style="">Left button held down on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_right_button</i></td>
        <td style="">Right button held down on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_middle_button</i></td>
        <td style="">Middle button (or clickable wheel) held down on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_no_button</i></td>
        <td style="">No buttons held down</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_left_press</i></td>
        <td style="">Left button just pressed on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_right_press</i></td>
        <td style="">Right button just pressed on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_middle_press</i></td>
        <td style="">Middle button (or clickable wheel) just pressed on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_left_release</i></td>
        <td style="">Left button just released on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_right_release</i></td>
        <td style="">Right button just released on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_middle_release</i></td>
        <td style="">Middle button just released on object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_mouse_enter</i></td>
        <td style="">Mouse just entered object&#39;s bounding box</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_mouse_leave</i></td>
        <td style="">Mouse just left object&#39;s bounding box</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_mouse_wheel_up</i></td>
        <td style="">Mouse wheel scrolled upwards</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_mouse_wheel_down</i></td>
        <td style="">Mouse wheel scrolled downwards</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_left_button</i></td>
        <td style="">Left button held down anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_right_button</i></td>
        <td style="">Right button held down anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_middle_button</i></td>
        <td style="">Middle button (or clickable wheel) held down anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_left_press</i></td>
        <td style="">Left button just pressed anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_right_press</i></td>
        <td style="">Right button just pressed anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_middle_press</i></td>
        <td style="">Middle button (or clickable wheel) just pressed anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_left_release</i></td>
        <td style="">Left button just released anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_right_release</i></td>
        <td style="">Right button just released anywhere</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_middle_release</i></td>
        <td style="">Middle button just released anywhere</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_gesture</b></td>
        <td style="">A gesture event (Tap, Drag, Flick, Pinch or Rotate)</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_tap</i></td>
        <td style="">A single click/touch and release has been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_double_tap</i></td>
        <td style="">Two quick touches/clicks and releases have been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_drag_start</i></td>
        <td style="">The beginning of a drag gesture has been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_dragging</i></td>
        <td style="">A touch/click has been held and moved for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_drag_end</i></td>
        <td style="">The release of the touch/click from a drag has been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_flick</i></td>
        <td style="">The release of a touch/click from a drag had enough movement for a flick event to be detected for the <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_pinch_start</i></td>
        <td style="">Two touches and a straight movement have been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_pinch_in</i></td>
        <td style="">The movement between two touches for an <i>instance</i> has been detected as inwards</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_pinch_out</i></td>
        <td style="">The movement between two touches for an <i>instance</i> has been detected as outwards</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_pinch_end</i></td>
        <td style="">The release of one (or both) touches for a pinch has been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_rotate_start</i></td>
        <td style="">The movement between two touches for an <i>instance</i> has been detected as a rotation</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_rotating</i></td>
        <td style="">The movement between two touches for an <i>instance</i> has been detected as rotating</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gesture_rotate_end</i></td>
        <td style="">The release of one (or both) touches for a rotation has been detected for an <i>instance</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_tap</i></td>
        <td style="">A single click/touch and release has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_double_tap</i></td>
        <td style="">Two quick touches/clicks and releases have been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_drag_start</i></td>
        <td style="">The beginning of a drag gesture has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_dragging</i></td>
        <td style="">A touch/click has been held and moved <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_drag_end</i></td>
        <td style="">The release of the touch/click from a drag has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_flick</i></td>
        <td style="">The release of a touch/click from a drag had enough movement for a flick event to be detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_pinch_start</i></td>
        <td style="">Two touches and a straight movement have been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_pinch_in</i></td>
        <td style="">The movement between two touches <i>anywhere</i> in the room has been detected as inwards</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_pinch_out</i></td>
        <td style="">The movement between two touches <i>anywhere</i> in the room has been detected as outwards</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_pinch_end</i></td>
        <td style="">The release of one (or both) touches for a pinch has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_rotate_start</i></td>
        <td style="">The movement between two touches <i>anywhere</i> in the room has been detected as a rotation</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_rotating</i></td>
        <td style="">The movement between two touches <i>anywhere</i> in the room has been detected as rotating</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_global_gesture_rotate_end</i></td>
        <td style="">The release of one (or both) touches for a rotation has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_collision</b></td>
        <td style="">Collision with an object</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- The index of the object to check.</i></td>
        <td style=""><span class="inline">obj_enemy</span> for example.</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_other</b></td>
        <td style="">One of the actions listed under &#39;Other&#39;</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_outside</i></td>
        <td style="">Whether the instance is outside of the room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_boundary</i></td>
        <td style="">Whether the instance is intersecting the boundary</td>
      </tr>
      <tr style="">
        <td style=""><em>   ---- ev_outside_view0...7</em></td>
        <td style="">Whether the instance is outside the given view (0 to 7)</td>
      </tr>
      <tr style="">
        <td style=""><em>   ---- ev_boundary_view0...7</em></td>
        <td style="">Whether the instance is interesecting with the boundary of the given view (0 to 7)</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_game_start</i></td>
        <td style="">Only triggered at the start of the game</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_game_end</i></td>
        <td style="">Only triggered at the end of the game</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_room_start</i></td>
        <td style="">Only triggered at the start of a room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_room_end</i></td>
        <td style="">Only triggered at the end of a room</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_animation_end</i></td>
        <td style="">If the object&#39;s sprite has reached the end of its animation</td>
      </tr>
      <tr style="">
        <td style=""><em><i>   ---- ev_animation_update</i></em></td>
        <td style="">Animation event that runs every step for objects that use skeletal animations</td>
      </tr>
      <tr style="">
        <td style=""><em><i>   ---- ev_animation_event</i></em></td>
        <td style="">Animation event that runs for skeletal animations as assigned in the skeletal animation tool</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_end_of_path</i></td>
        <td style="">If the object has reached the end of a path it is following</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_user0... ev_user15</i></td>
        <td style="">One of the 16 available user events.</td>
      </tr>
      <tr style="">
        <td style=""><em>   ---- ev_broadcast_message</em></td>
        <td style="">Broadcast Message event used for sprites and sequences</td>
      </tr>
      <tr style="">
        <td style=""><b>ev_draw</b></td>
        <td style="">Draw event. <i><b><span class="note">NOTE</span> </b>This event cannot be forced outside of a draw event and the constants are only for identifying the event when performed in these cases.</i></td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_draw_begin</i></td>
        <td style="">The draw begin event.</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_draw_end</i></td>
        <td style="">The draw end event.</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_draw_pre</i></td>
        <td style="">The pre draw event.</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_draw_post</i></td>
        <td style="">The post draw event.</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gui</i></td>
        <td style="">The draw gui event.</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gui_begin</i></td>
        <td style="">The draw gui begin event.</td>
      </tr>
      <tr style="">
        <td style=""><i>   ---- ev_gui_end</i></td>
        <td style="">The draw gui end event.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">event_perform(type, numb);</p>
  <table style="">
    <tbody>
      <tr style="">
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr style="">
        <td>type</td>
        <td><span data-keyref="Type_Constant_Event_Type"><a target="_blank" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">Event Type Constant</a></span></td>
        <td>The type of event to perform (see the table above).</td>
      </tr>
      <tr style="">
        <td>numb</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span> or <span data-keyref="Type_Constant_Event_Number"><a target="_blank" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">Event Number Constant</a></span></td>
        <td>The specific event constant or value, if one is necessary (otherwise, just use 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Extended Example</h4>
  <p class="dropspot">To help understand how this function can be used, please look at the following few examples:</p>
  <p class="code">event_perform(ev_keypress, ord(&quot;W&quot;));</p>
  <p class="dropspot">This would perform the event associated with Keyboard Check Pressed &quot;W&quot; key (without actually generating a keyboard press).</p>
  <p class="code">event_perform(ev_step, ev_step_begin);</p>
  <p class="dropspot">This would perform the <i>Begin Step</i> event (if called from any of the step events it would cause the begin step event code to be run twice).</p>
  <p class="code">event_perform(ev_create, 0);</p>
  <p class="dropspot">This would perform the <i>Create<i> event of the instance.</i></i></p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Generating_Object_Events.htm">Generating Object Events</a></div>
        <div style="float:right">Next: <a href="event_perform_async.htm">event_perform_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
event_perform
ev_create
ev_destroy
ev_step
ev_alarm
ev_keyboard
ev_mouse
ev_collision
ev_other
ev_draw
ev_draw_begin
ev_draw_end
ev_draw_post
ev_draw_pre
ev_gui
ev_gui_begin
ev_gui_end
ev_keypress
ev_keyrelease
ev_trigger
ev_left_button
ev_right_button
ev_middle_button
ev_no_button
ev_left_press
ev_right_press
ev_middle_press
ev_left_release
ev_right_release
ev_middle_release
ev_mouse_enter
ev_mouse_leave
ev_mouse_wheel_up
ev_mouse_wheel_down
ev_global_left_button
ev_global_right_button
ev_global_middle_button
ev_global_left_press
ev_global_right_press
ev_global_middle_press
ev_global_left_release
ev_global_right_release
ev_global_middle_release
ev_outside
ev_boundary
ev_game_start
ev_cleanup
ev_game_end
ev_room_start
ev_room_end
ev_no_more_lives
ev_no_more_health
ev_animation_end
ev_end_of_path
ev_close_button
ev_user0
ev_user1
ev_user2
ev_user3
ev_user4
ev_user5
ev_user6
ev_user7
ev_user8
ev_user9
ev_user10
ev_user11
ev_user12
ev_user13
ev_user14
ev_user15
ev_step_normal
ev_step_begin
ev_step_end
ev_gesture
ev_gesture_tap
ev_gesture_double_tap
ev_gesture_drag_start
ev_gesture_drag_end
ev_gesture_dragging
ev_gesture_flick
ev_gesture_pinch_start
ev_gesture_pinch_in
ev_gesture_pinch_out
ev_gesture_pinch_end
ev_gesture_rotate_start
ev_gesture_rotating
ev_gesture_rotate_end
ev_global_gesture_tap
ev_global_gesture_double_tap
ev_global_gesture_drag_start
ev_global_gesture_drag_end
ev_global_gesture_dragging
ev_global_gesture_flick
ev_global_gesture_pinch_start
ev_global_gesture_pinch_in
ev_global_gesture_pinch_out
ev_global_gesture_pinch_end
ev_global_gesture_rotate_start
ev_global_gesture_rotating
ev_global_gesture_rotate_end
-->
  <!-- TAGS
event_perform
-->

</body></html>