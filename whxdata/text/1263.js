rh._.exports({"0":[["array_find_index"]],"1":[["array_find_index"]],"2":[["array_find_index"]],"3":[["\n  "],["\n  ","This function returns the index of the ","first"," element ","in the input array or in a range of it ","for which the predicate function returns ","true"," or -1"," ","if no such element is found.","\n  ","Once a value is found the function stops execution so array elements that come after that will not be checked using the predicate function.","\n  "," ","\n  ","\n  ","\n  "],["\n  ","array_find_index","(array, function, [offset], [length]);","\n  ","\n    ","\n      ","\n      ","\n      ","\n    ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","array","\n        ","Array","\n        ","The array to use","\n      ","\n      ","\n        ","function","\n        ","Function","\n        ","The function to use for each element","\n      ","\n      ","\n        ","offset","\n        ","Real","\n        ","OPTIONAL"," The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be ","array_length(array) + offset",".","\n      ","\n      ","\n        ","length","\n        ","Real","\n        ","OPTIONAL"," The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 > 1 > 0 instead of 0 > 1 > 2).","\n      ","\n    ","\n  ","\n  "],["\n  ","function(element, index);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","element","\n        ","Any","\n        ","The current array element","\n      ","\n      ","\n        ","index","\n        ","Real","\n        ","The current array index","\n      ","\n    ","\n  ","\n\n","\n  "],["\n  ","Boolean"," (whether the condition checked in the function is ","true"," or ","false",")","\n\n","\n  "," ","\n  "],["\n  ","Real"," (the index of the first element found or -1 if nothing was found)","\n  "," ","\n  "],["\n  ","var f = function(element, index)","\n    {","\n        return (element > 0);","\n    }","\n    var array = [-1, -8, -2, -4, 0, 3, 8, 7, 5];","\n    var index = ","array_find_index","(array, f);","\n  ","The above code first creates a function that takes an array element and its index as the input. The function returns ","true"," if the element is greater than 0 and ","false"," if not. An array with values is then created, some negative, others zero or positive.","\n    Finally an index is found using ","array_find_index"," and stored in a temporary variable ","index",". This variable will contain the value 5, as the first positive value in the array, 3, is at array index 5.","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Array Functions","\n        ","Next: ","array_any","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["array_find_index"]],"5":[["Syntax:"],["Function Syntax:"],["Function Returns: "],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1263"})