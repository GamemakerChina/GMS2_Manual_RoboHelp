rh._.exports({"0":[["draw_surface_ext"]],"1":[["draw_surface_ext"]],"2":[["draw_surface_ext"]],"3":[["\n  ","\n  "],["\n  ","This function will draw the given surface as in the function ","draw_surface()"," but with additional options to change the scale, blending, rotation and alpha of the surface being drawn. Changing these values does ","not"," modify the resource in any way (only how it is drawn).","\n  ","\n  ","NOTE"," When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ","ALWAYS"," check that a surface exists using ","surface_exists()"," before referencing them directly.","\n  ","TIP"," How a surface appears depends on its contents, especially the alpha values inside the surface. A surface ","cleared"," with an alpha of 0 may appear different from a surface cleared with an alpha of 1, due to the way they blend with the background. Take care of this whenever you notice a difference in the way something renders on a custom surface as opposed to the ","application_surface",".","\n\n","\n  "," ","\n  "],["\n  ","draw_surface_ext(id, x, y, xscale, yscale, rot, col, alpha);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","id","\n        ","Surface ID","\n        ","The unique ID value of the surface to draw.","\n      ","\n      ","\n        ","x","\n        ","Real","\n        ","The x position of where to draw the surface.","\n      ","\n      ","\n        ","y","\n        ","Real","\n        ","The y position of where to draw the surface.","\n      ","\n      ","\n        ","xscale","\n        ","Real","\n        ","The horizontal scale.","\n      ","\n      ","\n        ","yscale","\n        ","Real","\n        ","The vertical scale.","\n      ","\n      ","\n        ","rot","\n        ","Real","\n        ","The rotation or angle to draw the surface.","\n      ","\n      ","\n        ","col","\n        ","Colour","\n        ","The colour with which to blend the surface.","\n      ","\n      ","\n        ","alpha","\n        ","Real","\n        ","The alpha transparency for drawing the surface.","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","N/A","\n  "," ","\n  "],["\n  ","draw_surface_ext(surf, 0, 0, 2, 2, 0, c_red, 0.5);","\n  ","The above code will draw a the surface indexed in the variable \"surf\" at the (0,0) position in the room, with twice the original scale, blended red and semi transparent.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Surfaces","\n        ","Next: ","draw_surface_part","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["draw_surface_ext"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1792"})