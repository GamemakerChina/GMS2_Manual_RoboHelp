rh._.exports({"0":[["vertex_freeze"]],"1":[["vertex_freeze"]],"2":[["vertex_freeze"]],"3":[["\n  ","\n  "],["\n  ","This function can be used to \"freeze\" a vertex buffer. This buffer becomes ","read-only",", meaning that should you need to change it, you would have to delete the whole buffer and re-create it. A frozen buffer can be submitted to the shader faster than a normal, dynamic buffer and is recommended for those effects that require an unchanging custom primitive for the duration of a level or the game.","\n  ","The function will return 0 on successfully freezing the specified vertex buffer, however if it failed for any reason, it will return -1.","\n  "," ","\n  "],["\n  ","vertex_freeze(buffer);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","buffer","\n        ","Vertex Buffer ID","\n        ","The vertex buffer to freeze.","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","Real"," (0 for success, -1 for failure)","\n  "," ","\n  "],["\n  ","// Create event","\n    vertex_freeze(vbuff);","\n  ","The above code will freeze the given vertex buffer in the Create event, so it can be used as a \"static\" buffer in other events for faster access.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Primitives And Vertex Formats","\n        ","Next: ","vertex_submit","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["vertex_freeze"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"691"})