rh._.exports({"0":[["instance_create_depth"]],"1":[["instance_create_depth"]],"2":[["instance_create_depth"]],"3":[["\n  ","\n  "],["\n  ","With this function you can create a new instance of the specified object at any given point within the room and at the depth specified. The depth can be any value, where the lower the depth the \"nearer\" to the camera things will be drawn and the higher the depth the further away, so an instance at depth -200 will be drawn over an instance at depth +300 (for example).","\n  ","Note that this function will actually create a room layer for the instance, since all instances ","must"," be on a layer in the room, but since this is a ","managed"," layer (i.e.: not one that you have created through code or in the room, but one that ","GameMaker"," has created automatically). You cannot access that layer, and the ","layer"," instance variable will return -1.","\n  ","IMPORTANT"," There is a minimum and maximum layer depth of -16000 to 16000. Anything placed on a depth outside that range ","will not be drawn"," although all events will still run as normal.","\n  ","This function returns the ","id"," of the new instance which can then be stored in a variable and used to access that instance. Note that this function will also call the ","Create Event"," of the instance being created ","before"," continuing with the code or actions for the event that called the function.","\n  "],["\n  ","The last argument, ","var_struct",", is optional and takes a struct containing additional variables for the new instance.","\n  ","Variables from this struct are applied to the new instance ","before"," its Create event runs, but ","after"," its ","Variable Definitions"," are set.","\n  ","This means that the values from that struct are readable in the Create event of the new instance. See ","Example 2"," at the bottom.","\n  ","Values applied to the new instance through this struct can be of any type, including ","method"," variables. ","Built-in variables"," can be changed as well.","\n  ","NOTE"," Variables from the struct are \"shallow-copied\" to the new instance, meaning any arrays, structs, and other resources are copied by reference and not duplicated.","\n  "," ","\n  "],["\n  ","instance_create_depth(x, y, depth, obj);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","x","\n        ","Real","\n        ","The x position the object will be created at","\n      ","\n      ","\n        ","y","\n        ","Real","\n        ","The y position the object will be created at","\n      ","\n      ","\n        ","depth","\n        ","Real","\n        ","The depth to assign the created instance to","\n      ","\n      ","\n        ","obj","\n        ","Object Asset","\n        ","The object index of the object to create an instance of","\n      ","\n      ","\n        ","var_struct","\n        ","Struct","\n        ","OPTIONAL"," A struct with variables to assign to the new instance","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","Instance ID","\n  "," ","\n  "],["\n  ","var inst = instance_create_depth(x, y, -100, obj_Bullet);","\n    with (inst)","\n    {","\n        speed = other.shoot_speed;","\n        direction = other.image_angle;","\n    }","\n  ","The above code creates a new instance of the object ","obj_bullet"," at ","-100"," depth, and stores the instance ID in a variable. This variable is then used to assign ","speed"," and ","direction"," to the new instance.","\n  ","This will first create the instance, run its Create event, and ","then"," assign values to its variables.","\n  ","If you want to assign some variables ","before"," the Create event runs, see the example below.","\n  "," ","\n  "],["\n  ","var inst = instance_create_depth(x, y, -100, obj_bullet,","\n    {","\n        speed : shoot_speed,","\n        direction : image_angle","\n    });","\n  ","The above code creates an instance of ","obj_bullet",", and passes in a struct as the last argument.","\n  ","That struct has variables for the speed and direction. It pulls its values from the calling instance, without the need to use ","other",".","\n  ","These variables are applied to the new instance before its Create event runs.","\n  ","You're not limited to a struct literal, as you can also pass in a variable that stores an existing struct, or create a ","new"," struct from a ","constructor",".","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Instances","\n        ","Next: ","instance_destroy","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["instance_create_depth"]],"5":[["Syntax:"],["Returns:"],["Example 1:"],["Example 2:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"11":[["Optional Struct"]],"id":"2488"})