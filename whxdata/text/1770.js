rh._.exports({"0":[["array_filter_ext"]],"1":[["array_filter_ext"]],"2":[["array_filter_ext"]],"3":[["\n  "],["\n  ","This mutates the input array resulting in an array with only the elements for which ","the predicate function ","returns ","true",".","\n  ","The first element for which the predicate function returns ","true"," is written to the index given by ","offset",", others are written to subsequent indices (with the direction given by the sign of the ","length"," parameter).","\n  ","\n  ","IMPORTANT"," This function ","mutates"," the input array, i.e. changes it directly. Existing array elements in the range given by the offset and length parameter might be overwritten. For performance reasons the array is ","not"," resized and the new number of ","valid"," elements, starting at the offset position and in the direction given by the sign of the length parameter, is returned instead.","\n\n","\n  ","\n  ","\n  "],["\n  ","array_filter_ext","(array, function, [offset], [length]);","\n  ","\n    ","\n      ","\n      ","\n      ","\n    ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","array","\n        ","Array","\n        ","The array to use","\n      ","\n      ","\n        ","function","\n        ","Function","\n        ","The function to use for each element","\n      ","\n      ","\n        ","offset","\n        ","Real","\n        ","OPTIONAL"," The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be ","array_length(array) + offset",".","\n      ","\n      ","\n        ","length","\n        ","Real","\n        ","OPTIONAL"," The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 > 1 > 0 instead of 0 > 1 > 2).","\n      ","\n    ","\n  ","\n  "],["\n  ","function(element, index);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","element","\n        ","Any","\n        ","The current array element","\n      ","\n      ","\n        ","index","\n        ","Real","\n        ","The current array index","\n      ","\n    ","\n  ","\n\n","\n  "],["\n  ","Boolean"," (whether the condition checked in the function is ","true"," or ","false",")","\n\n","\n  "," ","\n  "],["\n  ","Real"," (the number of valid elements in the array)","\n  "," ","\n  "],["\n  ","function greater_than_5(element, index) {","\n        return (element > 5);","\n    }","\n    ","\n    values = [1, 2, 3, 4, 5, 6, 7, 8, 9];","\n    var valid_elements = ","array_filter_ext","(values, greater_than_5, -2, infinity);\n  ","\n  ","The above code first defines a function ","greater_than_5"," that takes in an element and index parameter and returns ","true"," when the element is greater than 5. An array ","values"," is then initialised with the digits from 1 to 9. Finally ","array_filter_ext"," is called on this array with the function. It takes a starting index of -2 (the ","one before last"," index) and a length of ","infinity",". 8 is the value at the starting index and 9 the value after that. Both are greater than 5 so the function will return a value of 5 and store it in the temporary variable ","valid_elements",".","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Array Functions","\n        ","Next: ","array_map_ext","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["array_filter_ext"]],"5":[["Syntax:"],["Function Syntax:"],["Function Returns: "],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1770"})