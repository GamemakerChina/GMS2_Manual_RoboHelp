rh._.exports({"0":[["array_unique"]],"1":[["array_unique"]],"2":[["array_unique"]],"3":[["\n  "],["\n  ","This function returns a ","new"," array containing the values of the input array or a range of it with any duplicate values removed.","\n  "," ","\n  "],["\n  ","array_unique","(array, [offset], [length]);","\n  ","\n    ","\n      ","\n      ","\n      ","\n    ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","array","\n        ","Array","\n        ","The array to use","\n      ","\n      ","\n        ","offset","\n        ","Real","\n        ","OPTIONAL"," The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be ","array_length(array) + offset",".","\n      ","\n      ","\n        ","length","\n        ","Real","\n        ","OPTIONAL"," The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 > 1 > 0 instead of 0 > 1 > 2).","\n      ","\n    ","\n  ","\n  "],["\n  ","Array","\n  "," ","\n  "],["\n  ","var values = [\"rock\", \"paper\", \"scissors\", \"rock\", \"rock\", \"scissors\", \"paper\", \"scissors\"];","\n    var values_unique = ","array_unique","(vals);","\n  ","The above code first creates a temporary array ","values",". It then calls ","array_unique"," and stores the result in a temporary variable ","values_unique",". This array contains the three possible values in the array ","values",": \"rock\", \"paper\" and \"scissors\".","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Array Functions","\n        ","Next: ","array_filter_ext","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["array_unique"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"2027"})