rh._.exports({"0":[["vertex_colour"]],"1":[["vertex_colour,vertex_color"]],"2":[["vertex_colour,vertex_color"]],"3":[["\n  ","\n  "],["\n  ","If your defined vertex format takes a colour value you can use this function to add that data to the vertex being defined for the current primitive. The function needs a buffer to store the data in and will take either a ","colour constant",", or a hex value (using the standard ","GameMaker"," format of BGR, eg: $FF0000 for blue) as well as an alpha value from 0 (transparent) to 1 (fully opaque).","\n  "," ","\n  "],["\n  ","vertex_colour(buffer, colour, alpha);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","buffer","\n        ","Vertex Buffer ID","\n        ","The buffer to write the information to.","\n      ","\n      ","\n        ","colour","\n        ","Colour","\n        ","The colour for this vertex (can be a constant or a hex value).","\n      ","\n      ","\n        ","alpha","\n        ","Real","\n        ","The alpha value for the vertex (from 0 to 1).","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","N/A","\n  "," ","\n  "],["\n  ","vertex_colour(b, c_white, 1);","\n  ","The above code will set the vertex being defined to be white with an alpha value of 1.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Primitives And Vertex Formats","\n        ","Next: ","vertex_normal","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["vertex_colour"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1072"})