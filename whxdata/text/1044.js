rh._.exports({"0":[["buffer_base64_encode"]],"1":[["buffer_base64_encode"]],"2":[["buffer_base64_encode"]],"3":[["\n  ","\n  "],["\n  ","This function will convert the data from the given buffer into a base64 format encoded string. This is a commonly used encoding scheme that is often used for any media that needs to be stored or transferred over the internet as text, and renders the\n    output unreadable to the human eye. To use this you need to specify an already created buffer, the offset value (which is the point within the buffer at which you wish to start encoding) as well as the size, in bytes, of the buffer memory to encode.","\n  "," ","\n  "],["\n  ","buffer_base64_encode(buffer, offset, size);","\n  ","\n    ","\n      ","\n        ","Argument","Type","\n        ","Description","\n     ","\n      ","\n        ","buffer","Buffer ID","\n        ","The index of the buffer to use.","\n     ","\n      ","\n        ","offset","Real","\n        ","The data offset value.","\n     ","\n      ","\n        ","size","Real","\n        ","The size of the buffer.","\n     ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","String","\n  "," ","\n  "],["\n  ","var b_str = buffer_base64_encode(buff, 0, buffer_get_size(buff))","\n  ","The above code will create encode the full data stored in the buffer indexed by the variable \"buff\", and store the returned string in the local variable \"b_str\".","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Buffers","\n        ","Next: ","buffer_base64_decode","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["buffer_base64_encode"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1044"})