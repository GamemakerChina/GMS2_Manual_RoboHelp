rh._.exports({"0":[["audio_emitter_get_bus"]],"1":[["audio_emitter_get_bus"]],"2":[["audio_emitter_get_bus"]],"3":[["\n  "],["\n  ","This function returns the bus that an ","audio emitter"," is connected to.","\n  ","By default audio emitters are connected to the main audio bus, accessed through ","audio_bus_main",". If the emitter had a different audio bus assigned using ","audio_emitter_bus",", it will return that bus's struct.","\n  "," ","\n  "],["\n  ","audio_emitter_get_bus","(emitter);","\n  ","\n    ","\n      ","\n      ","\n      ","\n    ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","emitter","\n        ","Audio Emitter ID","\n        ","The emitter to get the bus for","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","AudioBus Struct","\n  "," ","\n  "],["\n  ","var bus = ","audio_emitter_get_bus","(emitter);","\n    show_debug_message(bus);","\n  ","The above code first stores the bus assigned to an emitter in a temporary variable ","bus",". It then displays the contents of the returned ","AudioBus Struct"," struct in a debug message.","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Audio Emitters","\n        ","Next: ","audio_emitter_create","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["audio_emitter_get_bus"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1518"})