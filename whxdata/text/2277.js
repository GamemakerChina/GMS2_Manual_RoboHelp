rh._.exports({"0":[["instanceof"]],"1":[["instanceof"]],"3":[["\n  ","\n  "],["\n  ","This function can be used to get the name of the ","constructor function"," that was used to create a struct. The struct itself should have been created using the "," ","new"," operator along with the constructor itself. You supply the variable with the struct reference to check and the function will return either a string with the constructor name or ","undefined",".","\n  ","Note that if you pass the function a struct literal (i.e.: a struct that was created without using a constructor function) then it will simply return the string ","\"struct\"",".","\n  ","This function can also be used to check if a struct reference is a ","weak reference"," or not, in which case the function will return the string ","\"weakref\""," instead of the name of the function that created the struct. For more information, see the function ","weak_ref_create()",".","\n  ","The returned constructor name will include additional text if the constructor function was not created in a script. If it was created inside an object, its name will include the object and the event where it was created. For example, a constructor called ","test_constructor"," created in the Create event of ","Object1"," will be returned as ","\"test_constructor_gml_Object_Object1_Create_0\"",". To avoid this, create your constructors in a ","script",".","\n  "," ","\n  "],["\n  ","instanceof(struct_id);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","struct","\n        ","Struct","\n        ","The struct reference to use.","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","String"," or ","undefined","\n  "," ","\n  "],["\n  ","In this example we must first define the function that will be used as the constructor for our struct. The following function is defined in a script asset:","\n  ","function init_struct(_a, _b, _c) constructor","\n    {","\n        a = _a;","\n        b = _b;","\n        c = _c;","\n    }","\n  ","This function can then be used along with the ","new"," operator to create a struct and populate it with the variables set to the values of the arguments used in the function:","\n  ","mystruct = new init_struct(10, 100, \"Hello World\");","\n  ","We can then get the name of the constructor function that was used like this:","\n  ","var _name = instanceof(mystruct);","\n    if is_string(_name)","\n    {","\n        show_debug_message(_name);","\n    }","\n  ","This will print the string ","\"init_struct\""," to the output log, which is the name of the constructor function as defined in its script.","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Variable Functions","\n        ","Next: ","array_create","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["instanceof"]],"5":[["Syntax:"],["Returns:"],["Extended Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"2277"})