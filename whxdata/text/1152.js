rh._.exports({"0":[["matrix_multiply"]],"1":[["matrix_multiply"]],"2":[["matrix_multiply"]],"3":[["\n  ","\n  "],["\n  ","With this function you can multiply two matrix arrays together to create a new transform matrix. The function will return the new matrix index which should be stored in a variable for future use.","\n  ","NOTE",": You can't use a matrix constant as an argument with this function, so if you wish to multiply the (for example) view matrix with a custom matrix that you have built, you must first call ","matrix_get()"," and assign the view matrix values to an array variable, then multiply it by your custom matrix, and then set the chosen matrix (view, projection or world).","\n  "," ","\n  "],["\n  ","matrix_multiply(matrix1, matrix2);","\n  ","\n    ","\n      ","\n        ","Argument","Type","\n        ","Description","\n     ","\n      ","\n        ","matrix1","Matrix Array","\n        ","The first matrix index to use.","\n     ","\n      ","\n        ","matrix2","Matrix Array","\n        ","The second matrix index to use.","\n     ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","Matrix Array","\n  "," ","\n  "],["\n  ","var v_matrix = matrix_get(matrix_view);","\n    var new_matrix = matrix_multiply(v_matrix, my_matrix);","\n    matrix_set(matrix_view, new_matrix);","\n  ","The above code will get the current view matrix, then multiply that with a custom matrix and then use the resulting matrix index to set the view matrix again.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Matrix Functions","\n        ","Next: ","matrix_build_identity","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["matrix_multiply"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1152"})