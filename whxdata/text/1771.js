rh._.exports({"0":[["array_filter"]],"1":[["array_filter"]],"2":[["array_filter"]],"3":[["\n  "],["\n  ","This function returns a ","new"," array that is the ","filtered"," version of the array (or a range of it) that you pass into it.","\n  ","It only keeps those elements ","of the original array for which the predicate function returns ","true",". Elements for which the predicate function returns ","false"," are ","not"," added to the new array.","\n  ","The predicate function is called for each element in the range that you provide to the function.","\n  ","NOTE"," See ","array_copy_while"," for the function that stops execution after the first ","false"," value of the predicate function.","\n  ","\n  ","\n  "],["\n  ","array_filter","(array, function, [offset], [length]);","\n  ","\n    ","\n      ","\n      ","\n      ","\n    ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","array","\n        ","Array","\n        ","The array to use","\n      ","\n      ","\n        ","function","\n        ","Function","\n        ","The function to use for each element","\n      ","\n      ","\n        ","offset","\n        ","Real","\n        ","OPTIONAL"," The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be ","array_length(array) + offset",".","\n      ","\n      ","\n        ","length","\n        ","Real","\n        ","OPTIONAL"," The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 > 1 > 0 instead of 0 > 1 > 2).","\n      ","\n    ","\n  ","\n  "],["\n  ","function(element, index);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","element","\n        ","Any","\n        ","The current array element","\n      ","\n      ","\n        ","index","\n        ","Real","\n        ","The current array index","\n      ","\n    ","\n  ","\n\n","\n  "],["\n  ","Boolean"," (whether the condition checked in the function is ","true"," or ","false",")","\n\n","\n  "," ","\n  "],["\n  ","Array","\n  "," ","\n  "],["\n  ","function passed_the_test(element, index)","\n    {","\n        return element >= 50;","\n    }","\n    ","\n    scores = [0, 15, 4, 78, 96, 65, 49];","\n    passed = ","array_filter","(scores, passed_the_test);\n  ","\n  ","The above code first defines a function ","passed_the_test"," that takes in an ","element"," and ","index"," parameter. The function returns ","true"," if the value of ","element"," is greater than or equal to 50 or ","false"," if it is not. It then creates an array ","scores"," with various values between 0 and 100. Finally it calls ","array_filter"," on this array and stores the new array in a variable ","passed",".","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Array Functions","\n        ","Next: ","array_map","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["array_filter"]],"5":[["Syntax:"],["Function Syntax:"],["Function Returns: "],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1771"})