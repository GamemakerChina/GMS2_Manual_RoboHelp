rh._.exports({"0":[["matrix_set"]],"1":[["matrix_set,matrix_view,matrix_projection,matrix_world"]],"2":[["matrix_set,matrix_view,matrix_projection,matrix_world"]],"3":[["\n  ","\n  "],["\n  ","This function takes an ","array"," of 16 values, corresponding to a given 4x4 matrix type, where elements [0 - 3] would be row 1, elements [4 -7] would be row 2, etc... (see the image on the ","main page","). You can create such a matrix using the ","matrix_build()"," or ","matrix_get()"," functions or simply building the array yourself and passing that into the function. The available matrix types are ","view",", ","projection"," and ","world",", for which you would use one of the following constants:","\n  ","\n    ","\n      ","\n        ","Constant","\n        ","Description","\n      ","\n      ","\n        ","matrix_view","\n        ","The current view matrix","\n      ","\n      ","\n        ","matrix_projection","\n        ","The current projection matrix","\n      ","\n      ","\n        ","matrix_world","\n        ","The current world matrix","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","matrix_set(type, matrix);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Type","\n        ","Description","\n      ","\n      ","\n        ","type","\n        ","Matrix Type Constant","\n        ","The type of matrix to get the values of (see the ","constants"," listed above)","\n      ","\n      ","\n        ","matrix","\n        ","Matrix Array","\n        ","The matrix data as an array","\n      ","\n    ","\n  ","\n  "," ","\n  "],["\n  ","N/A","\n  "," ","\n  "],["\n  ","matrix_set(matrix_world, m_array);","\n  ","The above code will set the values of the current world matrix to those stored in the array matrix \"m_array\".","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Matrix Functions","\n        ","Next: ","matrix_build","\n      ","\n    ","\n    "],["\n  ","\n  ","\n  ","\n\n"]],"4":[["matrix_set"]],"5":[["Syntax:"],["Returns:"],["Example:"]],"6":[["© Copyright YoYo Games Ltd. 2022 All Rights Reserved"]],"id":"1660"})