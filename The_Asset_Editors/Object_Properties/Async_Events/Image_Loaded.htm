<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "6.3.1.2.0_8";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Image Loaded</title>
  <meta name="generator" content="Adobe RoboHelp 2020"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page detailing the Image Loaded async event."/>
  <meta name="rh-index-keywords" content="Objects - Async Image Loaded Event"/>
  <meta name="search-keywords" content="Image Loaded,ev_async_web_image_load"/>
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"/>
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
<meta name="brsnext" value="The_Asset_Editors/Object_Properties/Async_Events/Networking.htm"/><meta name="brsprev" value="The_Asset_Editors/Object_Properties/Async_Events/IAP.htm"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Image Loaded">
        <span>Image Loaded</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Image Loaded</span></h1>
  <p><img alt="Image Loaded Event" class="center" src="../../../assets/Images/Asset_Editors/Async_ImageLoaded.png"/>This event is triggered when you load an image into <span data-keyref="GameMaker Name">GameMaker</span> either on HTML5, or through a <a class="tooltip" title="Short for &#39;Universal Resource Locator&#39;, and is basically the address of something on the internet.">URL</a>. For example, say you want to load a sprite image, and only change the current sprite for the instance to the new one after it has loaded. You would have something like this in the Create event (or any other event):</p>
  <p class="code">var _url = &quot;http://www.angusgames.com/game/background1.png&quot;;<br/>
    spr = sprite_add(_url, 0, false, false, 0, 0);</p>
  <p>This will now start to load the image into the device or the browser, but it will not block <span data-keyref="GameMaker Name">GameMaker</span> while it waits for the file to be loaded. Instead <span data-keyref="GameMaker Name">GameMaker</span> will keep running as normal until the image is loaded and the <a class="tooltip" title="A callback is simply a function that runs and then triggers another function (or code block) when it has finished doing whatever it was assigned to do. For example, the funtion sprite_add() will trigger a callback in the asynchronous Image Loaded event when the sprite has been loaded.">callback</a> triggers the <strong>Image Loaded Event</strong>, where a <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> is created and stored in the special variable <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>. The map contains the following information:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">filename</span>&quot;: The complete path to the file you requested.</li>
    <li class="dropspot">&quot;<span class="inline">id</span>&quot;: The ID of the resource that you have loaded. This will be the same as the variable that you have assigned the resource to.</li>
    <li class="dropspot">&quot;<span class="inline">status</span>&quot;: Returns a value of less than 0 for an error.</li>
  </ul>
  <p>You would then assign the newly loaded image to a sprite in this event. The following code example demonstrates how the returned information would be used:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == spr<br/>
    {<br/>
        if ds_map_find_value(async_load, &quot;status&quot;) &gt;= 0<br/>
        {<br/>
            sprite_index = spr;<br/>
        }<br/>
    }</p>
  <p>The above code will first check the <span class="inline">id</span> of the DS map that has been created, then check the <span class="inline">status</span> of the callback. If the value is greater than or equal to 0 (signalling success) the result from the callback will then be used to set the sprite index to the newly loaded image.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Async_Events.htm">Async Events</a></div>
        <div style="float:right">Next: <a href="Networking.htm">Networking</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Image Loaded Event
ev_web_image_load
-->
  <!-- TAGS
ev_web_image_load
-->

</body></html>